apiVersion: v1
kind: Namespace
metadata:
  name: platform
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: portal-nginx-default-conf
  namespace: platform
  labels:
    app: portal
data:
  default.conf: |

    log_format  main_d  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;

        access_log  /var/log/nginx/host.access.log main_d;
        error_log  /var/log/nginx/error.log;

        #error_page  404              /404.html;

          root /usr/share/nginx/html;
          index index.html;

          location /fluentbitoutput {
            alias /fluentbitoutput;
            autoindex on;
            autoindex_exact_size off;
            autoindex_format html;
            autoindex_localtime on;

            types {
              text/plain log;
            }
          }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portal
  namespace: platform
spec:
  selector:
    matchLabels:
      app: portal
  replicas: 1
  template:
    metadata:
      labels:
        app: portal
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: platformdata
        - mountPath: /fluentbitoutput
          name: fluentbitoutput
        - name: nginx-default
          mountPath: /etc/nginx/conf.d/default.conf # mount nginx-conf volumn to /etc/nginx
          readOnly: true
          subPath: default.conf
      volumes:
        - name: platformdata
          hostPath:
            path: /platformdata
        - name: fluentbitoutput
          hostPath:
            path: /fluentbitoutput
        - name: nginx-default
          configMap:
            name: portal-nginx-default-conf # place ConfigMap on /etc/nginx/conf.d/default.conf
            items:
              - key: default.conf
                path: default.conf
---
apiVersion: v1
kind: Service
metadata:
  name: portal
  namespace: platform
spec:
  selector: 
    app: portal
  type: ClusterIP  
  ports:
    - name: http
      port: 80
      targetPort: 80
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: portal
  namespace: platform
spec:
  routes:
    - match: PathPrefix(`/.platform`)
      kind: Rule
      services:
        - name: portal
          port: 80
      middlewares:
        - name: portal-stripprefix
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: portal-stripprefix
  namespace: platform
spec:
  stripPrefix:
    prefixes:
      - "/.platform"
    forceSlash: false